#!/bin/bash
set -eu

EXEC=${0##*/}
if [[ $EXEC = on-launch.* ]]; then
	HOOK=on-launch
elif [[ $EXEC = on-exit.* ]]; then
	HOOK=on-exit
elif [[ $EXEC = on-modify.* ]]; then
	HOOK=on-modify
	read -r OLD
	read -r NEW
elif [[ $EXEC = on-add.* ]]; then
	HOOK=on-add
	read -r NEW
else
	echo "Unknown hook: $EXEC"
	exit 1
fi

task() {
	command task rc.confirmation=no rc.bulk=10000 rc.verbose=nothing "$@"
}

block() {
	local UUID=$1
	local BLOCKS=$2

	if [[ $BLOCKS = -* ]]; then
		UUID="-$UUID"
		BLOCKS=${BLOCKS#*-}
	fi

	task "$BLOCKS" modify depends:"$UUID" >&2 || {
		echo "Task $BLOCKS could not be blocked"
		return 1
	}
}

printline() {
	printf "%s\n" "$1"
}

case $HOOK in
	on-exit)
		RES=0
		while read -r NEW; do
			if [[ "$NEW" = *\"blocks\"* ]] && JQ=$(jq -Mcre '.blocks, .uuid' <<< "$NEW"); then
				{
					read -r BLOCKS
					read -r UUID
					task "$UUID" modify blocks: || RES=$?
					while [[ $BLOCKS = *,* ]]; do
						block "$UUID" "${BLOCKS%%,*}" || RES=$?
						BLOCKS=${BLOCKS#*,}
					done
					block "$UUID" "$BLOCKS" || RES=$?
				} <<< "$JQ"
			fi
		done
		exit $RES
		;;
	on-modify|on-add)
		printline "$NEW"
		;;
esac
